{"version":3,"sources":["assets/img/dog.jpg","components/Formulario/ValidatedPicker.js","components/Formulario/Formulario.js","components/Cita/Cita.js","components/CustomModal/CustomModal.js","App.js","serviceWorker.js","index.js","components/Formulario/formulario.module.css","app.module.css","components/CustomModal/customModal.module.css","components/Cita/cita.module.css"],"names":["module","exports","ValidatedTimePicker","this","props","helperText","errorMessages","validators","requiredError","rest","validatorListener","isValid","state","error","getErrorMessage","ValidatorComponent","ValidatedDatePicker","Formulario","cita","mascota","propietario","fecha","Date","hora","sintomas","disabled","handleDateChange","date","setState","handlerChange","event","target","name","value","submitCita","preventDefault","form","id","uuid","createCita","resetValidations","result","Container","component","maxWidth","CssBaseline","className","styles","paper","Avatar","avatar","icon","Typography","variant","onSubmit","ref","r","noValidate","margin","required","fullWidth","label","autoComplete","onChange","autoFocus","placeholder","errorMessage","utils","DateFnsUtils","format","KeyboardButtonProps","TextareaAutosize","textarea","rowsMin","rowsMax","aria-label","Button","type","color","submit","React","Component","Cita","handleOpen","deleteCita","ListItem","button","onClick","ListItemAvatar","ListItemText","primary","secondary","ListItemSecondaryAction","IconButton","edge","CustomModal","handleClose","Modal","aria-labelledby","aria-describedby","modal","open","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Card","root","CardActionArea","CardMedia","alt","height","image","Image","title","CardContent","gutterBottom","pos","Intl","DateTimeFormat","year","month","day","timeZone","hour","minute","hour12","App","citas","push","newsCitas","filter","length","newState","citasIniciales","JSON","parse","localStorage","getItem","map","setItem","stringify","AppBar","position","header","Toolbar","noWrap","Grid","container","justify","spacing","item","xs","sm","lg","xl","Paper","elevation","subtitle","demo","List","dense","key","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.efa1e6be.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dog.2ceac30f.jpg\";","import React from \"react\";\nimport { KeyboardDatePicker, KeyboardTimePicker } from \"@material-ui/pickers\";\nimport { ValidatorComponent } from \"react-material-ui-form-validator\";\n\nexport class ValidatedTimePicker extends ValidatorComponent {\n  render() {\n    const { errorMessages, validators, requiredError, helperText, validatorListener, ...rest } = this.props;\n    const { isValid } = this.state;\n    return (\n    <KeyboardTimePicker\n        {...rest}\n        error={!isValid}\n        helperText={(!isValid && this.getErrorMessage()) || helperText}\n    />\n    );\n  }\n}\n\nexport default class ValidatedDatePicker extends ValidatorComponent {\n  render() {\n    const {  errorMessages, validators, requiredError, helperText, validatorListener, ...rest } = this.props;\n    const { isValid } = this.state;\n    return (\n      <KeyboardDatePicker\n        {...rest}\n        error={!isValid}\n        helperText={(!isValid && this.getErrorMessage()) || helperText}\n      />\n    );\n  }\n}\n","import 'date-fns';\nimport React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport { TextareaAutosize } from '@material-ui/core';\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\nimport ValidatedDatePicker, { ValidatedTimePicker } from './ValidatedPicker';\nimport {v4 as uuid} from 'uuid';\nimport styles from './formulario.module.css';\n\nclass Formulario extends React.Component \n{\n  state = {\n    cita: {\n      mascota: '',\n      propietario: '',\n      fecha: new Date(),\n      hora: new Date(),\n      sintomas: '',\n    },\n    disabled: false\n  };\n\n  handleDateChange = date => {\n    this.setState(() => {\n      return {\n        cita: {\n          ...this.state.cita,\n          fecha: date,\n          hora: date\n        }\n      }\n    });\n  }\n\n  handlerChange = event => {\n    const {name, value} = event.target;\n    this.setState(() => {\n      return {\n        cita: {\n          ...this.state.cita,\n          [name]: value\n        }\n      }\n    })\n  }\n  \n  submitCita = event => {\n    event.preventDefault();\n    const { disabled } = this.state.cita;\n    //validar\n    if(!this.form.isValid || disabled) {\n      this.setState(() => {\n        return {\n          disabled: true\n        }\n      });\n    }\n    //asignar un id\n    let cita = this.state.cita;\n    cita.id = uuid();\n    //crear la cita\n    this.props.createCita(this.state.cita);\n    //reiniciar el form\n    this.setState(() => {\n      return {\n        cita: {\n          mascota: '',\n          propietario: '',\n          fecha: new Date(),\n          hora: new Date(),\n          sintomas: ''\n        }\n      }\n    });\n    this.form.resetValidations();\n  }\n\n  validatorListener = result => {\n    this.setState(() => {\n      return {\n        disabled: !result\n      }\n    });\n  }\n\n  render() {\n    const { error, helperText } = this.props;\n    const { isValid } = this.state.cita;\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={styles.paper}>\n          <Avatar className={styles.avatar}>\n            <PetsIcon className={styles.icon}/>\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h6\"> Crear Cita\n          </Typography>\n          <ValidatorForm onSubmit={this.submitCita} ref={r => (this.form = r)} className={styles.form} noValidate>\n            <TextValidator\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"mascota\"\n              label=\"Nombre de la Mascota\"\n              name=\"mascota\"\n              autoComplete=\"mascota\"\n              onChange={this.handlerChange}\n              value={this.state.cita.mascota}\n              autoFocus\n              placeholder=\"Nombre de la Mascota\"\n              error={isValid || error}\n              helperText={(!isValid && this.errorMessage) || helperText}\n              validators={['required','minStringLength:2', 'maxStringLength:40', 'isString']}\n              errorMessages={['El nombre de la mascota es requerido','Debe tener como mínimo 2 letras', 'Debe tener como máximo 40 letras', 'Debe ser una cadena de caracteres']}\n              validatorListener={this.validatorListener}\n            />\n            <TextValidator\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"propietario\"\n              label=\"Nombre del Dueño\"\n              id=\"propietario\"\n              autoComplete=\"propietario\"\n              onChange={this.handlerChange}\n              value={this.state.cita.propietario}\n              placeholder=\"Nombre del Dueaño\"\n              error={isValid || error}\n              helperText={(!isValid && this.errorMessage) || helperText}\n              validators={['required','minStringLength:4', 'maxStringLength:60', 'isString']}\n              errorMessages={['El nombre del propietario es requerido','Debe tener como mínimo 4 letras', 'Debe tener como máximo 60 letras', 'Debe ser una cadena de caracteres']}\n              validatorListener={this.validatorListener}\n            />\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <ValidatedDatePicker\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  label=\"Fecha\"\n                  format=\"MM/dd/yyyy\"\n                  value={ this.state.cita.fecha }\n                  onChange={ this.handleDateChange }\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                  }}\n                  placeholder=\"Fecha\"\n                  error={isValid || error}\n                  helperText={(!isValid && this.errorMessage) || helperText}\n                  validators={['required']}\n                  errorMessages={['La fecha es requerida']}\n                  validatorListener={this.validatorListener}\n                />\n                <ValidatedTimePicker\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"time-picker\"\n                  label=\"Hora\"\n                  value={ this.state.cita.hora }\n                  onChange={ this.handleDateChange }\n                  KeyboardButtonProps={{\n                    'aria-label': 'change time',\n                  }}\n                  placeholder=\"Hora\"\n                  error={isValid || error}\n                  helperText={(!isValid && this.errorMessage) || helperText}\n                  validators={['required']}\n                  errorMessages={['La hora es requerida']}\n                  validatorListener={this.validatorListener}\n                />\n            </MuiPickersUtilsProvider>\n            <TextareaAutosize\n              className={styles.textarea}\n              label=\"Síntomas\"\n              rowsMin={3}\n              name=\"sintomas\"\n              rowsMax={4}\n              onChange={this.handlerChange}\n              value={this.state.cita.sintomas}\n              aria-label=\"maximum height\"\n              placeholder=\"Síntomas reconocidos...\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={this.state.disabled}\n              className={styles.submit}\n            > Agregar Cita\n            </Button>\n          </ValidatorForm>\n        </div>\n      </Container>\n    )\n  }\n}\n\nexport default Formulario;\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport DogIcon from '@material-ui/icons/Pets';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport styles from './cita.module.css';\nimport PropTypes from 'prop-types';\n\nclass Cita extends React.Component \n{\n    static propTypes = {\n        cita: PropTypes.object,\n    }\n\n    handleOpen = () => {\n        this.props.handleOpen(this.props.cita);\n    };    \n\n    render() {\n        const { cita, deleteCita } = this.props;\n        return (\n            <ListItem button onClick={this.handleOpen}>\n                <ListItemAvatar>\n                    <Avatar className={styles.avatar}>\n                        <DogIcon />\n                    </Avatar>\n                    </ListItemAvatar>\n                <ListItemText\n                primary={cita.mascota}\n                secondary={cita.propietario ? cita.propietario : null}\n                />\n                <ListItemSecondaryAction>\n                    <IconButton edge=\"end\" aria-label=\"delete\" onClick={ () => deleteCita(cita.id) }>\n                        <DeleteIcon className={styles.icon}/>\n                    </IconButton>\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nexport default Cita;","import React from 'react';\nimport styles from './customModal.module.css';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Image from '../../assets/img/dog.jpg';\nimport PropTypes from 'prop-types';\n\nclass CustomModal extends React.Component \n{\n    static propTypes = {\n        cita: PropTypes.object,\n    }\n\n    handleClose = () => {\n        this.props.handleClose(false);\n    }\n\n    render() {\n        const cita = this.props.cita;\n        const optionsDate = {\n            year: 'numeric', month: 'numeric', day: 'numeric',\n            timeZone: 'America/Los_Angeles' \n          };\n        const optionsTime = {\n            hour: 'numeric', minute: 'numeric',\n            hour12: true,\n        };\n        return ( \n            <>\n                <Modal\n                    aria-labelledby=\"transition-modal-title\"\n                    aria-describedby=\"transition-modal-description\"\n                    className={styles.modal}\n                    open={this.props.open}\n                    onClose={this.handleClose}\n                    closeAfterTransition\n                    BackdropComponent={Backdrop}\n                    BackdropProps={{\n                    timeout: 500,\n                    }}\n                >\n                    <Fade in={this.props.open}>\n                        <Card className={styles.root}>\n                            <CardActionArea>\n                                <CardMedia\n                                component=\"img\"\n                                alt=\"Contemplative Reptile\"\n                                height=\"140\"\n                                image={Image}\n                                title=\"Contemplative Reptile\"\n                                />\n                                <CardContent>\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                        {cita.mascota}\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n                                        {'Síntomas: '}\n                                    </Typography>\n                                    <Typography className={styles.pos} color=\"textSecondary\" component=\"p\">\n                                        {cita.sintomas}\n                                    </Typography>\n                                    <Typography className={styles.pos} color=\"textPrimary\" variant=\"body2\">\n                                        {'Fecha y Hora de la Cita: '}\n                                    </Typography>\n                                    <Typography className={styles.pos} color=\"textSecondary\" component=\"p\">\n                                        {`${new Intl.DateTimeFormat('en-US', optionsDate).format(cita.fecha)} | ${new Intl.DateTimeFormat('en-US', optionsTime).format(cita.hora)}`}\n                                    </Typography>\n                                </CardContent>\n                            </CardActionArea>\n                        </Card>\n                    </Fade>\n                </Modal>\n            </>\n         );\n    }\n}\n\nexport default CustomModal;","import React, { Fragment } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Formulario from './components/Formulario/Formulario';\nimport styles from './app.module.css';\nimport Cita from './components/Cita/Cita';\nimport List from '@material-ui/core/List';\nimport CustomModal from './components/CustomModal/CustomModal';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\n\nclass App extends React.Component\n{\n\n  state = {\n      citas: [],\n      title: '',\n      cita: {},\n      open: false,\n  }\n  \n  componentDidMount() {\n    let citasIniciales = JSON.parse(localStorage.getItem('citas'));\n    if(!citasIniciales) {\n      citasIniciales = [];\n      this.setState(() => {\n        return {\n          citas: citasIniciales\n        }\n      })\n    }else{\n      citasIniciales.map(cita => {\n        cita.fecha = new Date(cita.fecha);\n        cita.hora = new Date(cita.hora);\n        return cita;\n      });\n      this.setState(() => {\n        return {\n          citas: citasIniciales\n        }\n      })\n    }\n    \n    if(this.state.citas.length === 0 ){\n      this.setState(() => {\n        return {\n          title: 'No tienes citas'\n        }\n      })\n    }else{\n      this.setState(() => {\n        return {\n          title: 'Administra tus citas'\n        }\n      })\n    }\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('citas', JSON.stringify(this.state.citas));\n  }\n\n  createCita = cita => {\n    let citas = this.state.citas;\n    citas.push(cita);\n    this.setState(() => {\n      return {\n        citas\n      }\n    });\n    this.setState(() => {\n      return {\n        title: 'Administra tus citas'\n      }\n    });\n  }\n\n  deleteCita = id => {\n    const newsCitas = this.state.citas.filter(cita => cita.id !== id);\n    this.setState(() => {\n      return {\n        citas: newsCitas\n      }\n    });\n    if(newsCitas.length === 0 ){\n      this.setState(() => {\n        return {\n          title: 'No tienes citas'\n        }\n      })\n    }\n  }\n\n  handleOpen = cita => {\n    this.setState(() => {\n      return {\n        cita\n      }\n    });\n    this.setState(() => {\n      return {\n        open:true\n      }\n    });\n  }\n\n  handleClose = newState => {\n    this.setState(() => {\n      return {\n        open:newState\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <AppBar position=\"relative\" className={styles.header}>\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              edge=\"start\"  \n            >  \n            </IconButton>\n            <Typography variant=\"h6\" noWrap>\n              Administrador de pacientes mascotas\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <div className={styles.root}>\n          <Grid container justify=\"center\" spacing={3}>\n            <Grid item xs={10} sm={5} lg={4} xl={4}>\n              <Paper className={styles.paper} elevation={3}>\n                <Formulario createCita={this.createCita}/>\n              </Paper>\n            </Grid>\n            <Grid item xs={10} sm={5} lg={4} xl={4}>\n              <Paper className={styles.paper} elevation={3}>\n              <Typography justify=\"center\" className={styles.subtitle} component=\"h1\" variant=\"h6\">{this.state.title}</Typography>\n                <div className={styles.demo}>\n                  <List dense>\n                    {this.state.citas.map(cita => (\n                      <Cita\n                        key={cita.id}\n                        cita={cita}\n                        deleteCita={this.deleteCita}\n                        handleOpen={this.handleOpen}\n                      />\n                    ))}\n                    </List>\n                </div>\n              </Paper>\n            </Grid>\n          </Grid>\n        </div>\n        <CustomModal cita={this.state.cita} open={this.state.open} handleClose={this.handleClose}/>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paper\":\"formulario_paper__1YVlc\",\"avatar\":\"formulario_avatar__FpV17\",\"form\":\"formulario_form__1NKCN\",\"submit\":\"formulario_submit__2G5Q6\",\"icon\":\"formulario_icon__22I_i\",\"textarea\":\"formulario_textarea__2Oh7W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"app_root__15E-r\",\"paper\":\"app_paper__g3zJt\",\"header\":\"app_header__2ppV5\",\"demo\":\"app_demo__350GZ\",\"title\":\"app_title__2fbQI\",\"subtitle\":\"app_subtitle__23EHX\",\"drawerPaper\":\"app_drawerPaper__R-EUm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"customModal_modal__1xlXY\",\"paper\":\"customModal_paper__xTW7x\",\"media\":\"customModal_media__2x4J4\",\"root\":\"customModal_root__24MoF\",\"pos\":\"customModal_pos__2RNmi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"cita_avatar__1ykge\",\"icon\":\"cita_icon__17kP4\"};"],"sourceRoot":""}